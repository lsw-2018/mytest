<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
      <mapper namespace="com.lsw.mapper.Usermapper"> <!--名称空间  -->
      <!--1.名称空间的namespace必须为对应接口的全路径  -->
      
      <insert id="insert" parameterType="User">        
      <!--2.statement id必须与接口中的方法名相同  -->
      <!--3.statement 中的parameterType必须与接口的方法的参数类型一致
            （Usermapper insert中的 （User user）） -->
      <!--statement 中的resultType必须与接口中的方法的返回值类型一致，
             如果是List则与List的泛型一致  -->
      
      insert into user values(null,#{username},#{password})
      </insert>
      
      <update id="update" parameterType="user">
      update user set username=#{username},password=#{password} where id=#{id}
      </update>
      
      <delete id="delete" parameterType="int">
      delete from user where id=#{id}
      </delete>
      
      <select id="findAll" resultType="user"><!--resultType返回结果集List，但不能用，所以写List的泛型  -->
      select * from user
      </select>
      
      <select id="findByname" parameterType="String" resultType="user">
      select * from user where username like  #{username} 
      </select>
      
      <select id="findByid" parameterType="int" resultType="user">
      select * from user where id=#{id}
      </select>
      
      <select id="findBycon" parameterType="user" resultType="user">
      select * from user where 1=1
      <if test="username!=null">
      and username=#{username}
      </if>
      <if test="password!=null">
      and password=#{password}
      </if>
      </select>
      
      <select id="findByids" parameterType="user" resultType="user">
      select * from user where id in
      <foreach collection="list" separator="," item="id" open="(" close=") ">
      ${id}
      </foreach>  <!--separator 以你定义的为间隔  -->
      </select>
      </mapper> 